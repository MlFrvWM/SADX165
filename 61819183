local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/memejames/elerium-v2-ui-library//main/Library", true))()

local window = library:AddWindow("Sad Private", {
    main_color = Color3.fromRGB(158, 158, 158),
    min_size = Vector2.new(740, 500),
    can_resize = false,
})

local Killer = window:AddTab("Killing")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local playerWhitelist = {}
local targetPlayerNames = {}
local autoGoodKarma = false
local autoBadKarma = false
local autoKill = false
local killTarget = false
local spying = false
local autoEquipPunch = false
local autoPunchNoAnim = false
local targetDropdownItems = {}
local availableTargets = {}

Killer:AddSwitch("Auto Good Karma", function(bool)
	autoGoodKarma = bool
	task.spawn(function()
		while autoGoodKarma do
			local playerChar = LocalPlayer.Character
			local rightHand = playerChar and playerChar:FindFirstChild("RightHand")
			local leftHand = playerChar and playerChar:FindFirstChild("LeftHand")
			if playerChar and rightHand and leftHand then
				for _, target in ipairs(Players:GetPlayers()) do
					if target ~= LocalPlayer then
						local evilKarma = target:FindFirstChild("evilKarma")
						local goodKarma = target:FindFirstChild("goodKarma")
						if evilKarma and goodKarma and evilKarma:IsA("IntValue") and goodKarma:IsA("IntValue") and evilKarma.Value > goodKarma.Value then
							local rootPart = target.Character and target.Character:FindFirstChild("HumanoidRootPart")
							if rootPart then
								firetouchinterest(rightHand, rootPart, 1)
								firetouchinterest(leftHand, rootPart, 1)
								firetouchinterest(rightHand, rootPart, 0)
								firetouchinterest(leftHand, rootPart, 0)
							end
						end
					end
				end
			end
			task.wait(0.01)
		end
	end)
end)

Killer:AddSwitch("Auto Bad Karma", function(bool)
	autoBadKarma = bool
	task.spawn(function()
		while autoBadKarma do
			local playerChar = LocalPlayer.Character
			local rightHand = playerChar and playerChar:FindFirstChild("RightHand")
			local leftHand = playerChar and playerChar:FindFirstChild("LeftHand")
			if playerChar and rightHand and leftHand then
				for _, target in ipairs(Players:GetPlayers()) do
					if target ~= LocalPlayer then
						local evilKarma = target:FindFirstChild("evilKarma")
						local goodKarma = target:FindFirstChild("goodKarma")
						if evilKarma and goodKarma and evilKarma:IsA("IntValue") and goodKarma:IsA("IntValue") and goodKarma.Value > evilKarma.Value then
							local rootPart = target.Character and target.Character:FindFirstChild("HumanoidRootPart")
							if rootPart then
								firetouchinterest(rightHand, rootPart, 1)
								firetouchinterest(leftHand, rootPart, 1)
								firetouchinterest(rightHand, rootPart, 0)
								firetouchinterest(leftHand, rootPart, 0)
							end
						end
					end
				end
			end
			task.wait(0.01)
		end
	end)
end)

Killer:AddLabel("Whitelisting")
Killer:AddTextBox("Whitelist", function(text)
	local target = Players:FindFirstChild(text)
	if target then
		playerWhitelist[target.Name] = true
	end
end)

Killer:AddTextBox("UnWhitelist", function(text)
	local target = Players:FindFirstChild(text)
	if target then
		playerWhitelist[target.Name] = nil
	end
end)

Killer:AddLabel("Auto Killing")
Killer:AddSwitch("Auto Kill", function(bool)
    autoKill = bool

    task.spawn(function()
        while autoKill do
            local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
            local rightHand = character:FindFirstChild("RightHand")
            local leftHand = character:FindFirstChild("LeftHand")

            local punch = LocalPlayer.Backpack:FindFirstChild("Punch")
            if punch and not character:FindFirstChild("Punch") then
                punch.Parent = character
            end

            if rightHand and leftHand then
                for _, target in ipairs(Players:GetPlayers()) do
                    if target ~= LocalPlayer and not playerWhitelist[target.Name] then
                        local targetChar = target.Character
                        local rootPart = targetChar and targetChar:FindFirstChild("HumanoidRootPart")
                        if rootPart then
                            pcall(function()
                                firetouchinterest(rightHand, rootPart, 1)
                                firetouchinterest(leftHand, rootPart, 1)
                                firetouchinterest(rightHand, rootPart, 0)
                                firetouchinterest(leftHand, rootPart, 0)
                            end)
                        end
                    end
                end
            end

            task.wait(0.05)
        end
    end)
end)

Killer:AddLabel("Multi Targeting")

local targetDropdown = Killer:AddDropdown("Select Target", function(name)
	if name and not table.find(targetPlayerNames, name) then
		table.insert(targetPlayerNames, name)
	end
end)

Killer:AddTextBox("Remove Target", function(name)
	for i, v in ipairs(targetPlayerNames) do
		if v == name then
			table.remove(targetPlayerNames, i)
			break
		end
	end
end)

for _, player in ipairs(Players:GetPlayers()) do
	if player ~= LocalPlayer then
		targetDropdown:Add(player.Name)
		targetDropdownItems[player.Name] = true
	end
end

Players.PlayerAdded:Connect(function(player)
	if player ~= LocalPlayer then
		targetDropdown:Add(player.Name)
		targetDropdownItems[player.Name] = true
	end
end)

Players.PlayerRemoving:Connect(function(player)
	if targetDropdownItems[player.Name] then
		targetDropdownItems[player.Name] = nil
		targetDropdown:Clear()
		for name in pairs(targetDropdownItems) do
			targetDropdown:Add(name)
		end
	end

	for i = #targetPlayerNames, 1, -1 do
		if targetPlayerNames[i] == player.Name then
			table.remove(targetPlayerNames, i)
		end
	end
end)

Killer:AddSwitch("Kill Target(s)", function(state)
	killTarget = state

	task.spawn(function()
		while killTarget do
			local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()

			local punch = LocalPlayer.Backpack:FindFirstChild("Punch")
			if punch and not character:FindFirstChild("Punch") then
				punch.Parent = character
			end

			local rightHand = character:FindFirstChild("RightHand")
			local leftHand = character:FindFirstChild("LeftHand")

			if rightHand and leftHand then
				for _, name in ipairs(targetPlayerNames) do
					local target = Players:FindFirstChild(name)
					if target and target ~= LocalPlayer then
						local rootPart = target.Character and target.Character:FindFirstChild("HumanoidRootPart")
						if rootPart then
							pcall(function()
								firetouchinterest(rightHand, rootPart, 1)
								firetouchinterest(leftHand, rootPart, 1)
								firetouchinterest(rightHand, rootPart, 0)
								firetouchinterest(leftHand, rootPart, 0)
							end)
						end
					end
				end
			end

			task.wait(0.05)
		end
	end)
end)

Killer:AddSwitch("Spy Player", function(bool)
	spying = bool
	if not spying then
		local cam = workspace.CurrentCamera
		cam.CameraSubject = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") or LocalPlayer
		return
	end
	task.spawn(function()
		while spying do
			local target = Players:FindFirstChild(targetPlayerName)
			if target and target ~= LocalPlayer then
				local humanoid = target.Character and target.Character:FindFirstChild("Humanoid")
				if humanoid then
					workspace.CurrentCamera.CameraSubject = humanoid
				end
			end
			task.wait(0.1)
		end
	end)
end)

Killer:AddLabel("Punching Tool")
Killer:AddSwitch("Auto Equip Punch", function(state)
	autoEquipPunch = state
	task.spawn(function()
		while autoEquipPunch do
			local punch = LocalPlayer.Backpack:FindFirstChild("Punch")
			if punch then
				punch.Parent = LocalPlayer.Character
			end
			task.wait(0.1)
		end
	end)
end)

Killer:AddSwitch("Auto Punch [No Animation]", function(state)
	autoPunchNoAnim = state
	task.spawn(function()
		while autoPunchNoAnim do
			local punch = LocalPlayer.Backpack:FindFirstChild("Punch") or LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Punch")
			if punch then
				if punch.Parent ~= LocalPlayer.Character then
					punch.Parent = LocalPlayer.Character
				end
				LocalPlayer.muscleEvent:FireServer("punch", "rightHand")
				LocalPlayer.muscleEvent:FireServer("punch", "leftHand")
			else
				autoPunchNoAnim = false
			end
			task.wait(0.01)
		end
	end)
end)

Killer:AddSwitch("Auto Punch", function(state)
	_G.autoPunchActive = state
	if state then
		task.spawn(function()
			while _G.autoPunchActive do
				local punch = LocalPlayer.Backpack:FindFirstChild("Punch")
				if punch then
					punch.Parent = LocalPlayer.Character
					if punch:FindFirstChild("attackTime") then
						punch.attackTime.Value = 0
					end
				end
				task.wait()
			end
		end)
		task.spawn(function()
			while _G.autoPunchActive do
				local punch = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Punch")
				if punch then
					punch:Activate()
				end
				task.wait()
			end
		end)
	else
		local punch = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Punch")
		if punch then
			punch.Parent = LocalPlayer.Backpack
		end
	end
end)

Killer:AddSwitch("Fast Punch", function(state)
	_G.fastHitActive = state
	if state then
		task.spawn(function()
			while _G.fastHitActive do
				local punch = LocalPlayer.Backpack:FindFirstChild("Punch")
				if punch then
					punch.Parent = LocalPlayer.Character
					if punch:FindFirstChild("attackTime") then
						punch.attackTime.Value = 0
					end
				end
				task.wait(0.1)
			end
		end)
		task.spawn(function()
			while _G.fastHitActive do
				local punch = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Punch")
				if punch then
					punch:Activate()
				end
				task.wait(0.1)
			end
		end)
	else
		local punch = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Punch")
		if punch then
			punch.Parent = LocalPlayer.Backpack
		end
	end
end)
